var db = require('../lib/database'),
    mysql = require('mysql'),
    fs = require('fs'),
    moment = require('moment'),
    clc = require('cli-color');

var connection = db.connectdb();


module.exports = {
    makeid: function() {
        var text = '';
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        for (var i = 0; i < 5; i++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));

        return text;

    },

    makefilename: function() {
        var text = '';
        var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        for (var i = 0; i < 10; i++)
            text += possible.charAt(Math.floor(Math.random() * possible.length));

        return text;

    },


    setOwnerCookie: function(owner_hwid, cookie) {

        connection.query('SELECT * FROM users WHERE linked_cookie = ' + connection.escape(cookie), function(err, row) {
            if (err) throw err;

            if (row.length === 0) {
                connection.query('INSERT INTO users ( owner_hwid, linked_cookie ) VALUES ( ' + connection.escape(owner_hwid) + ',' + connection.escape(cookie) + ')', function(err, result) {
                    if (err) {
                        console.log(err);
                    }
                });
            }

        });


    }, // check if user in db if not make it and link HDID to a cookie UUID generated by node

    uploadfile: function(file, owner) {

        var that = this;
        var timestamp = moment.utc().toDate().toUTCString();
        console.log(timestamp);
        var filesize = this.getFilesizeInBytes(file.path);
        var filename = that.makefilename() + '.png';
        var url = this.makeid();
        if (!fs.existsSync('storage/' + owner + '/')) {
            fs.mkdir('storage/' + owner + '/');
        }

        fs.readFile(file.path, function(err, data) {
            if (fs.existsSync('storage/' + owner + '/' + filename)) {
                filename = that.makefilename() + '.png';
                var query = connection.query('INSERT INTO files ( owner, src, url, created ) VALUES ( ' + connection.escape(owner) + ',' + connection.escape(filename) + ',' + connection.escape(url) + ',' + connection.escape(timestamp) + ')');
            } else {
                var query = connection.query('INSERT INTO files ( owner, src, url, created ) VALUES ( ' + connection.escape(owner) + ',' + connection.escape(filename) + ',' + connection.escape(url) + ',' + connection.escape(timestamp) + ')');
            }
            fs.writeFile('storage/' + owner + '/' + filename, data);
            fs.unlink(file.path);

        });

        console.log(clc.yellow('[' + timestamp + ']') + connection.escape(owner) + ' Uploaded: ' + filename + ' To: /' + url);
        return url;
    },
    getFilesizeInBytes: function(filename) {
        var stats = fs.statSync(filename);
        var fileSizeInBytes = stats["size"];
        return fileSizeInBytes;
    }

};
